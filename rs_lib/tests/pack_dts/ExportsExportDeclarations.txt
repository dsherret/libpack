# mod.ts
/** Comment */
export class MyClass {
  prop1: string;
}

/** Comment3 */
export interface MyInterface {
  prop1: string;
}

/** Comment5 */
export type MyTypeAlias = string;

/** Comment7 */
export var MyVar: string = "";

/** Comment9 */
export enum MyEnum {
  member1 = 1,
}

/** Comment11 */
export function MyFunction() {
}

export { MyClass as MyOtherClass, MyInterface as MyOtherInterface, MyTypeAlias as MyOtherTypeAlias, MyVar as MyOtherVar, MyEnum as MyOtherEnum, MyFunction as MyOtherFunction } from "./other.ts";

# other.ts
/** Comment2 */
export class MyClass {
  prop2: string;
}

/** Comment4 */
export interface MyInterface {
  prop2: string;
}

/** Comment6 */
export type MyTypeAlias = string;

/** Comment8 */
export var MyVar: string = "";

/** Comment10 */
export enum MyEnum {
  member2 = 2,
}

/** Comment12 */
export function MyFunction() {
}

# output.d.ts
/** Comment */ export class MyClass {
  prop1: string;
}
/** Comment3 */ export interface MyInterface {
  prop1: string;
}
/** Comment5 */ export type MyTypeAlias = string;
/** Comment7 */ export var MyVar: string;
/** Comment9 */ export enum MyEnum {
  member1 = 1
}
/** Comment11 */ export function MyFunction(): void;
/** Comment2 */ declare class MyClass1 {
  prop2: string;
}
/** Comment4 */ interface MyInterface1 {
  prop2: string;
}
/** Comment6 */ type MyTypeAlias1 = string;
/** Comment8 */ declare var MyVar1: string;
/** Comment10 */ declare enum MyEnum1 {
  member2 = 2
}
/** Comment12 */ declare function MyFunction1(): void;
export { MyClass1 as MyOtherClass, MyInterface1 as MyOtherInterface, MyTypeAlias1 as MyOtherTypeAlias, MyVar1 as MyOtherVar, MyEnum1 as MyOtherEnum, MyFunction1 as MyOtherFunction };
