# mod.ts
import * as logger from './logger.ts';

const myLogger: logger.Logger = {
  log(...args: any[]) {
    logger.logger.log(...args);
  }
}

console.log(myLogger.log("Hello"));

# logger.ts
export interface Logger {
  log(...args: any[]): void;
}

export const logger: Logger = { log(...args: any[]) { console.log(...args); }};

# output.js
const pack0 = {
    logger: undefined
};
(function logger_ts() {
    const logger = {
        log (...args) {
            console.log(...args);
        }
    };
    Object.defineProperty(pack0, "logger", {
        get: ()=>logger
    });
})();
const myLogger = {
    log (...args) {
        pack0.logger.log(...args);
    }
};
console.log(myLogger.log("Hello"));
