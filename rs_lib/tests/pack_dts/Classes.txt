# other.ts
export class Other {
  prop: string = "";
}

# mod.ts
import { Other } from "./other.ts";

class SomeClass {
}

class Dep {
  prop: string = "";
  other: Other = new Other();
}

// test
/**
 * My test class
 */
export class Test {
  prop?: string = "test";
  other = 2;
  // test
  private myPrivateProp!: string = 2;
  someDep: Dep = new Dep();

  constructor(public readonly text: string, public readonly otherProp = true, public a?: string) {
    5;
  }

  method(value = true) {
    return 2;
  }

  protected test(): string {
  }

  private otherMethod(): number {
    return 2;
  }

  #test() {
    return 1;
  }
}

# output.d.ts
import Other = pack1.Other;
declare class Dep {
    prop: string;
    other: Other;
}
/**
 * My test class
 */ export class Test {
    #private;
    readonly text: string;
    readonly otherProp: boolean;
    a?: string;
    prop?: string;
    other: number;
    private myPrivateProp;
    someDep: Dep;
    constructor(text: string, otherProp?: boolean, a?: string);
    method(value?: boolean): unknown;
    protected test(): string;
    private otherMethod;
}
declare module pack1 {
    export class Other {
        prop: string;
    }
}
